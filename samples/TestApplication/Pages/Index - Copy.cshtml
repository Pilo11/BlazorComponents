@page "/backup"
@using BlazorComponents.Shared

<div class="container">
    <h2>Chart JS charts using Blazor</h2>
    <div class="row">
        <button class="btn btn-primary" onclick="@UpdateChart">Update Chart </button>
    </div>
    <ChartJsBarChart ref="barChartJs" Chart="@blazorBarChartJS" Width="600" Height="300" />
</div>


@functions {

        public ChartJSBarChart blazorBarChartJS { get; set; } = new ChartJSBarChart();
        ChartJsBarChart barChartJs;

        protected override void OnInit()
        {
            blazorBarChartJS = new ChartJSBarChart()
            {
                ChartType = "bar",
                CanvasId = "myFirstBarChart",
                Options = new ChartJsOptions()
                {
                    Text = "Sample chart from Blazor",
                    BorderWidth = 1,
                    Display = true
                },
                Data = new ChartJsBarData()
                {
                    Labels = new List<string>() { "Red", "Blue", "Yellow", "Green", "Purple", "Orange" },
                    Datasets = new List<ChartJsBarDataset>()
                {
                    new ChartJsBarDataset()
                    {
                        Label = "# of Votes from blazor",
                        BackgroundColor = new List<string>() {"#cc65fe" },
                        BorderColor = "#cc65fe",
                        PointHoverRadius = 2,
                        Data = new List<double>(){ 19.187,12.2253,5.5,3,3,2}
                    },
                    new ChartJsBarDataset()
                    {
                        Label = "# of Likes from blazor",
                        BackgroundColor = new List<string>() {"#36a2eb" },
                        BorderColor = "#36a2eb",
                        PointHoverRadius = 2,
                        Data = new List<int>(){ 30,10,15,13,13,12}.Select<int,double>(i=> i).ToList()
                    }
                }
            }
            };
    }

    public async Task<bool> UpdateChart()
    {
        //Update existing dataset
        blazorBarChartJS.Data.Labels.Add($"New{DateTime.Now.Second}");
        var firstDataSet = blazorBarChartJS.Data.Datasets[0];
        firstDataSet.Data.Add(DateTime.Now.Second);
        StateHasChanged();
        //Add new dataset
        //blazorLineChartJS.Data.Datasets.Add(new ChartJsLineDataset()
        //{
        //    BackgroundColor = "#cc65fe",
        //    BorderColor = "#cc65fe",
        //    Label = "# of Votes from blazor 1",
        //    Data = new List<int> {20,21,12,3,4,4},
        //    Fill = true,
        //    BorderWidth = 2,
        //    PointRadius = 3,
        //    PointBorderWidth = 1
        //});

        //var done = await barChartJs.UpdateChart(blazorBarChartJS);
        //StateHasChanged();

        return true;
    }
}