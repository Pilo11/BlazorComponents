@page "/multiple"
@using BlazorComponents.Shared

<div class="container">
    <h2>Chart JS Bar Chart Using Blazor</h2>
    <div class="row">
        <button class="btn btn-primary" onclick="@UpdateBarChart">Update Chart </button>
    </div>
    <ChartJsBarChart ref="barChartJs" Chart="@blazorBarChartJS" Width="600" Height="300" />

    <h2>Chart JS Line Chart Using Blazor</h2>
    <div class="row">
        <button class="btn btn-primary" onclick="@UpdateLineChart">Update Chart </button>
    </div>
    <ChartJsLineChart ref="lineChartJs" Chart="@blazorLineChartJS" Width="600" Height="300" />
</div>


@functions {

    public ChartJSBarChart blazorBarChartJS { get; set; } = new ChartJSBarChart();
    ChartJsBarChart barChartJs;
    public ChartJSLineChart blazorLineChartJS { get; set; } = new ChartJSLineChart();
    ChartJsLineChart lineChartJs;

    protected override void OnInit()
    {

        blazorBarChartJS = new ChartJSBarChart()
        {
            ChartType = "bar",
            CanvasId = "myFirstBarChart",
            Options = new ChartJsOptions()
            {
                Text = "Sample chart from Blazor",
                BorderWidth = 1,
                Display = true
            },
            Data = new ChartJsBarData()
            {
                Labels = new List<string>() { "Red", "Blue", "Yellow", "Green", "Purple", "Orange" },
                Datasets = new List<ChartJsBarDataset>()
                        {
                        new ChartJsBarDataset()
                        {
                        Label = "# of Votes from blazor",
                        BackgroundColor = "#cc65fe",
                        BorderColor = "#cc65fe",
                        PointHoverRadius = 2,
                        Data = new List<double>(){ 19.187,12.2253,5.5,3,3,2}
                        },
                        new ChartJsBarDataset()
                        {
                        Label = "# of Likes from blazor",
                        BackgroundColor = "#36a2eb",
                        BorderColor = "#36a2eb",
                        PointHoverRadius = 2,
                        Data = new List<int>(){ 30,10,15,13,13,12}.Select<int,double>(i=> i).ToList()
                        }
            }
            }
        };

        blazorLineChartJS = new ChartJSLineChart()
        {
            ChartType = "line",
            CanvasId = "myFirstLineChart",
            Options = new ChartJsOptions()
            {
                Text = "Sample chart from Blazor",
                Display = true,
                Responsive = false
            },
            Data = new ChartJsLineData()
            {
                Labels = new List<string>() { "Red", "Blue", "Yellow", "Green", "Purple", "Orange" },
                Datasets = new List<ChartJsLineDataset>()
            {
                new ChartJsLineDataset()
                {
                    BackgroundColor = "#ff6384",
                    BorderColor = "#ff6384",
                    Label = "# of Votes from blazor",
                    Data = new List<int>{ 19,12,5,3,3,2}.Select<int,double>(i=> i).ToList(),
                    Fill = false,
                    BorderWidth = 2,
                    PointRadius = 3,
                    PointBorderWidth=1
                }
            }
            }
        };
    }

    public async Task<bool> UpdateBarChart()
    {
        //Update existing dataset
        blazorBarChartJS.Data.Labels.Add($"New{DateTime.Now.Second}");
        var firstDataSet = blazorBarChartJS.Data.Datasets[0];
        firstDataSet.Data.Add(DateTime.Now.Second);

        return true;
    }

    public void UpdateLineChart()
    {
        //Update existing dataset
        blazorLineChartJS.Data.Labels.Add($"New{DateTime.Now.Second}");
        var firstDataSet = blazorLineChartJS.Data.Datasets[0];
        firstDataSet.Data.Add(DateTime.Now.Second);
    }
}